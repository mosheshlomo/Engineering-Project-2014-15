cout << "alt pressed" <<endl;
		//vtkSmartPointer<vtkCellPicker> cellPicker = vtkSmartPointer<vtkCellPicker>::New();
		//cellPicker->SetTolerance(0.00000001); 
		vtkPointData* pointData = selection_structured_points->GetPointData();
		vtkIntArray* selection_scalars = (vtkIntArray*) pointData->GetScalars();
		int * dim = selection_structured_points->GetDimensions();
		int ijk[3]={((intStyle->_x_position+120)*(240/dim[0])),((intStyle->_y_position)*(260/dim[1])),intStyle->_Slice};
		cout<<size_x<<":"<<size_y<<"^^"<<endl;
		cout<<ijk[0]<<":"<<ijk[1]<<":"<<ijk[2]<<endl;
		vtkIdType cellId =selection_structured_points->ComputePointId(ijk);

		cout <<intStyle->_x_position <<endl;
		cout <<intStyle->_y_position <<endl;
		cout << cellId << endl;

		//cellId = cellPicker->GetCellId(); 
		if(cellId != -1){
			cout << (int)selection_scalars->GetValue(2)<<endl;;
			cout << selection_structured_points->GetNumberOfPoints() <<endl;
			//for(int i=0; i<20000;i++){
				selection_scalars->SetValue(cellId,1);
			//}
		}
		else{
			cout << "The cellId found was: " << cellId << endl;
		}
		selection_scalars->Modified();
		selection_structured_points->Modified();
		selection_mapper->Modified();
		selection_mapper->GetLookupTable()->Modified();
		selection_mapper->Update();
		selection_actor->Modified();
		
		// change the crosshair's color
		vtkUnsignedCharArray* da = (vtkUnsignedCharArray*)pd->GetCellData()->GetScalars();
		da->SetValue(0, 255);
		da->SetValue(1, 0);
		da->SetValue(2, 0);
		da->SetValue(3, 255);
		da->SetValue(4, 0);
		da->SetValue(5, 0);


		selection_structured_points->GetPointData()->GetScalars()->Modified();
